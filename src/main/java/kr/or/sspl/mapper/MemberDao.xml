<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 
Member getMember(String uid) throws ClassNotFoundException, SQLException;
int insert(Member member) throws ClassNotFoundException, SQLException; 
 -->
<mapper namespace="kr.or.sspl.dao.MemberDao">

<!-- <select id="join" parameterType="kr.or.sspl.dto.MemberDto"  >
	INSERT INTO MEMBER(USER_ID, PASSWORD, NAME, EMAIL, ENABLED, PHONE_NUMBER)
	VALUES (#{user_id}, #{password}, #{name}, #{email}, #{enabled}, #{phone_number})
</select> -->


<select id="idCheck" resultType="String">
	SELECT user_id
	FROM member
	WHERE user_id =#{id}
</select>


<insert id="join" statementType="CALLABLE" parameterType="kr.or.sspl.dto.MemberDto">
    {CALL insert_member_with_roll(
        #{user_id, mode=IN, jdbcType=VARCHAR},
        #{password, mode=IN, jdbcType=VARCHAR},
        #{name, mode=IN, jdbcType=VARCHAR},
        #{email, mode=IN, jdbcType=VARCHAR},
        #{phone_number, mode=IN, jdbcType=VARCHAR},
        #{duplicate_email, mode=OUT, jdbcType=VARCHAR},
        #{duplicate_phone_number, mode=OUT, jdbcType=VARCHAR}
    )}
</insert>
<select id="userSelect" parameterType="HashMap" resultType="String">
	select password
	from member
	where user_id = #{id}
</select>

<select id="userData" resultType="kr.or.sspl.dto.MemberDto">
	select name, email, phone_number
	from member
	where user_id = #{id}
</select>

<select id="dupDataCheck" statementType="CALLABLE" parameterType="kr.or.sspl.dto.MemberDto">
	 {CALL select_member_dup_data(
        #{email, mode=IN, jdbcType=VARCHAR},
        #{phone_number, mode=IN, jdbcType=VARCHAR},
        #{duplicate_email, mode=OUT, jdbcType=VARCHAR},
        #{duplicate_phone_number, mode=OUT, jdbcType=VARCHAR}
    )}
</select>

<update id="userModify" parameterType="kr.or.sspl.dto.MemberDto">
  UPDATE member
  <set>
    <if test="name != null and name != 'null'">
      name = #{name},
    </if>
    <if test="email != null and email != 'null'">
      email = #{email},
    </if>
    <if test="phone_number != null and phone_number != 'null'">
      phone_number = #{phone_number},
    </if>
  </set>
  WHERE user_id = #{user_id}
</update>


</mapper>

